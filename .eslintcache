[{"C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\index.js":"1","C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\App.js":"2","C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\Myfirstlayout.js":"4","C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\Home.js":"5","C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\Contact.js":"6","C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\Service.js":"7","C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\Cards.js":"8","C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\Search.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":777,"mtime":1614759111791,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":12394,"mtime":1614741026817,"results":"14","hashOfConfig":"11"},{"size":1036,"mtime":1614758736997,"results":"15","hashOfConfig":"11"},{"size":5726,"mtime":1614758721411,"results":"16","hashOfConfig":"11"},{"size":923,"mtime":1614758843376,"results":"17","hashOfConfig":"11"},{"size":1738,"mtime":1614758704860,"results":"18","hashOfConfig":"11"},{"size":1210,"mtime":1614759238626,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"u4o1h9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\index.js",[],["40","41"],"C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\App.js",["42"],"C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\Myfirstlayout.js",["43","44"],"\r\n\r\n// import { arrayOf } from \"prop-types\";\r\nimport React,{useState} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import { Usestatehook } from \"./18Usestatehook\";\r\n// for formik\r\nimport {Formik,Form,ErrorMessage,Field,FieldArray} from \"formik\"\r\nconst arr=[{im:\"jerry.jpg\", ti:\"Jerry\"},{im:\"Liger.jpg\",ti:\"Liger\"},{im:\"kgf.jpg\",ti:\" KGF 2\"},{im:\"master.jpeg\", ti:\"Master\"},{im:\"bacchan.jpg\",ti:\" Bacchan\"},{im:\"Dhamaka.jpg\", ti:\"Dhamaka.jpg\"},{im:\"bell.jpeg\", ti:\"bell\"},{im:\"Haathi.jpeg\", ti:\"Hatti\"},{im:\"good.jpeg\", ti:\"Good\"},{im:\"radhe.jpg\", ti:\"Radhe\"}]\r\n\r\n const initialValues={\r\n   username:\"\",paddress:\"\",taddress:\"\",\r\n  haveproblem:false, radio:\"\",\r\nchoose:\"\",\r\ncomment:\"\",\r\nphnumbers:[\"\"]}\r\n\r\n  const onSubmit=(value)=>{\r\n    console.log(value)\r\n\r\n  }\r\n\r\n  const validate =(value)=>{\r\n    const error={\r\n      username:\"\",paddress:\"\",taddress:\"\",\r\n     haveproblem:\"\", radio:\"\",\r\n   choose:\"\",\r\n   comment:\"\"}\r\n    \r\n    if(!value.username)\r\n    {\r\n      error.username=\"*required\"\r\n    }\r\n    if(!value.paddress)\r\n    {\r\n      error.paddress=\"*required\"\r\n    }\r\n    if(!value.taddress)\r\n    {\r\n      error.taddress=\"*required\"\r\n    }\r\n    if(!value.radio)\r\n    {\r\n      error.radio=\"*required\"\r\n    }\r\n    if(!value.choose)\r\n    {\r\n      error.choose=\"*required\"\r\n    }\r\n    if(!value.comment)\r\n    {\r\n      error.comment=\"*required\"\r\n    }\r\n\r\n\r\n    return(error)\r\n\r\n  }\r\n// making cards\r\nconst Cards=(props)=>\r\n{\r\n  const [showhide, setshowhide] = useState(false)\r\nconst {im,ti}=props;\r\n  return(\r\n    <>\r\n          <div onMouseLeave={()=>{setshowhide(false)}} onMouseEnter={()=>{setshowhide(true)}} style={{height:\"300px\"}} className=\"col-6 col-md-3  p-2 photo \">\r\n            <img style={{height:\"100%\", width:\"100%\" ,borderRadius:\"27px\" }} src={im}  alt=\"movies not found\"/>\r\n\r\n{/* vvvvvvvvvvvvvvvvvvvvvviiiiiiiiiiiiiimmmmmmmmmmmmppppppppppp */} \r\n{/* if you  want to show or hide photodetail class element then you can hide and show it by \r\nby using display block and display none\r\nbut\r\nif you apply display style property on this div(class photodetail) then the d-flex proverty might be remove */}\r\n{/* and another thing is suppose class photodetail elemnt\r\ndoes not have d-flex \r\nthen you can apply d-none(to hide)\r\nbut in hover you are going to apply d-block(to show)\r\nbut note while hovering this element is not present\r\nthen how can you hover it and show it\r\nthus if you want to apply d-block(show) .phododetail elemnt  then hover its one parent div which is still present\r\nthen apply d-block(show property) in that element */}\r\n\r\n\r\n  {/* .changed div is make because we can not apply d-none d-block in photodetail class because it will overwrite */}\r\n           {showhide? <>  <div className=\"photodetail d-flex flex-column justify-content-center align-items-center\">\r\n            <h1>{ti}</h1>\r\n              <button className=\"p-2\" style={{background:\"chartreuse\",borderRadius:\"20px\",border:\"none\",color:\"white\"}}>Download</button>\r\n              </div>\r\n              \r\n              </>:null\r\n}\r\n              \r\n              </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n//makeing pages////////////////////////////////////////////////////////////////////////////////\r\n\r\n//making homepages//////////////////////////////////////////////////////////////////////////\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row align-items-center \" style={{ height: \"90vh\" }}>\r\n          <div\r\n            className=\" col-12 col-md-6 \"\r\n            style={{ color: \"rgba(0, 0, 0, 0.6)\" }}\r\n          >\r\n            <h1>Wlecome to Nitan Thapa website</h1>\r\n            <p>here you can watch and download latest bollywood movies</p>\r\n          </div>\r\n\r\n          <div className=\" col-12 col-md-6 move\" style={{ height: \"300px\" }}>\r\n            {/* vvvimp */}\r\n            {/* note the img always search the image in public folder\r\n      dont write ./ just write file name (recommended)\r\n       */}\r\n\r\n            <img\r\n              style={{ height: \"100%\", width: \"100%\" }}\r\n              className=\"img-thumbnail\"\r\n              src=\"56b07b869b85a351fd500373405685dc.jpg\"\r\n              alt=\"image\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n//makingabout pages/////////////////////////////////////////////////////////////\r\nfunction About() {\r\n  //program is made such that\r\n  //  it only gives jpg image\r\n  const [imagess, setimagess] = useState(\"\")\r\n  const [images, setimages] = useState(\"\")\r\n  const [found, setfound] = useState(false)\r\n  return (\r\n    <>\r\n     <div className=\"container\">\r\n       <div className=\"container-fluid\">\r\n         \r\n         <div className=\"row\" style={{}}>\r\n           <div className=\"col-12 mx-auto\">\r\n          <label htmlFor=\"\">\r\n           <input class=\"classinput text-center\" style={{border:\"solid chartreuse 1px\", margin:\"0px 5px\",boxShadow:\"2px 2px 3px chartreuse\"}}onChange={(e)=>{setimagess(e.currentTarget.value)}}type=\"text\" placeholder=\"search\"/>\r\n           <button class=\"buttonsearch\"onClick={()=>{setimages(`${imagess}.jpg`);setfound(true)}}>Search</button>\r\n            </label> \r\n            </div>\r\n         </div>\r\n        \r\n        <div className=\"row  justify-content-center\">\r\n{\r\n        found?<Cards im={images} ti=\"hello\" ></Cards>:null\r\n}\r\n        </div>\r\n\r\n       </div>\r\n\r\n     </div>\r\n    </>\r\n  );\r\n}\r\n\r\n//making contact pages//////////////////////////////////////////////////////////////\r\nfunction Contact() {\r\n  return (\r\n    <div style={{textAlign:\"left\",backgroundColor:\"black\",color:\"white\" }}>\r\n   <Formik\r\n   initialValues={initialValues}\r\n   onSubmit={onSubmit}\r\n   validate={validate}>\r\n     <Form>\r\n       <label htmlFor=\"id1\">Name</label>\r\n       <br/>\r\n       <Field className=\"classinput\" type=\"text\" id=\"id1\" name=\"username\"  ></Field>\r\n       <ErrorMessage name=\"username\">\r\n      {(errmes)=>{\r\n\r\n           return(<div style={{color:\"red\",display:\"inline-block\"}}>{errmes}</div>)\r\n         }\r\n        }\r\n       </ErrorMessage>\r\n       <br/>\r\n       <br/>\r\n\r\n       <label htmlFor=\"id2\">Permanent address</label>\r\n       <br/>\r\n       <Field className=\"classinput\" type=\"text\" id=\"id2\" name=\"paddress\"  ></Field>\r\n       <ErrorMessage name=\"paddress\">\r\n      {(errmes)=>{\r\n\r\n           return(<div style={{color:\"red\",display:\"inline-block\"}}>{errmes}</div>)\r\n         }\r\n        }\r\n       </ErrorMessage>\r\n       <br/>\r\n       <br/>\r\n\r\n       <label htmlFor=\"id3\">Temporary address</label>\r\n       <br/>\r\n       <Field type=\"text\" id=\"id3\" name=\"taddress\" className=\"classinput\"  ></Field>\r\n       <ErrorMessage name=\"taddress\">\r\n      {(errmes)=>{\r\n\r\n           return(<div style={{color:\"red\",display:\"inline-block\"}}>{errmes}</div>)\r\n         }\r\n        }\r\n       </ErrorMessage>\r\n       <br/>\r\n       <br/>\r\n\r\n       <label htmlFor=\"id4\">male</label>\r\n       <Field   type=\"radio\" id=\"id4\" name=\"radio\" value=\"male\" ></Field>\r\n       <label htmlFor=\"id5\">female</label>\r\n       <Field  type=\"radio\" id=\"id5\" name=\"radio\" value=\"female\" ></Field>\r\n       \r\n       <label  htmlFor=\"id6\">other</label>\r\n       <Field type=\"radio\" id=\"id6\" name=\"radio\" value=\"other\" ></Field>\r\n       <ErrorMessage name=\"radio\">\r\n      {(errmes)=>{\r\n\r\n           return(<div style={{color:\"red\",display:\"inline-block\"}}>{errmes}</div>)\r\n         }\r\n        }\r\n       </ErrorMessage>\r\n       <br/>\r\n       <br/>\r\n\r\n       <Field name=\"haveproblem\" type=\"checkbox\" id=\"id7\"></Field>\r\n       <label htmlFor=\"id7\"> is there any problem while downloding</label>\r\n       <br/>\r\n       <br/>\r\n\r\n\r\n       <Field component=\"select\" name=\"choose\" placeholder=\"choose\">\r\n\r\n         <option disabled hidden>choosecountry</option>\r\n         <option value=\"nepal\">Nepal</option>\r\n         <option value=\"india\">India</option>\r\n         <option value=\"china\">China</option>\r\n         <option value=\"bangladesh\">Bangladesh</option>\r\n       </Field>\r\n       <ErrorMessage name=\"choose\">\r\n      {(errmes)=>{\r\n\r\n           return(<div style={{color:\"red\",display:\"inline-block\"}}>{errmes}</div>)\r\n         }\r\n        }\r\n       </ErrorMessage>\r\n       <br/>\r\n       <br/>\r\n\r\n       <label htmlFor=\"com\">comment</label>\r\n       <Field as=\"textarea\"  id=\"com\" name=\"comment\"></Field>\r\n       <ErrorMessage name=\"comment\">\r\n      {(errmes)=>{\r\n\r\n           return(<div style={{color:\"red\",display:\"inline-block\"}}>{errmes}</div>)\r\n         }\r\n        }\r\n       </ErrorMessage>    \r\n        <br/>\r\n        \r\n        <FieldArray name=\"phnumbers\">\r\n          {\r\n            (props)=>{\r\n              const {push,remove,form}=props\r\n              const {values}=form\r\n              const {phnumbers}=values\r\n              \r\n\r\n              return( \r\n                <>\r\n                <label htmlFor=\"\">Add phone numbers</label>\r\n                {\r\n\r\n                \r\n                phnumbers.map((v,i)=>{\r\n\r\n                  return(\r\n                    <div style={{display:\"inline-block\"}}key={i}>\r\n                    <Field type=\"text\" name={`phnumbers[${i}]`}></Field>\r\n                    <button type=\"button\" onClick={()=>{push(\"\")}}>+</button>\r\n                    {\r\n                      i!=0&&<button type=\"button\" onClick={()=>{remove(i)}}>-</button>\r\n                    }\r\n                    \r\n                    </div>\r\n                  )\r\n                  \r\n  \r\n  \r\n                })\r\n              }\r\n                </>\r\n\r\n              )\r\n\r\n             \r\n\r\n\r\n\r\n\r\n\r\n              \r\n\r\n            }\r\n          }\r\n\r\n        </FieldArray>\r\n\r\n        <div className=\"leftbuttonsearch\">\r\n\r\n       <button  className=\"buttonsearch\" type=\"submit\">submit</button>\r\n        </div>\r\n\r\n        \r\n\r\n     </Form>\r\n   </Formik>\r\n   </div>\r\n  );\r\n  \r\n}\r\n//making Service pages//////////////////////////////////////////////////////////////\r\nfunction Service() {\r\n  \r\n  \r\n  return (\r\n    <>\r\n    <div className=\"contanier-fluid\"  style={{backgroundColor:\"#000000ed;\"}}>\r\n      <div className=\"container\" >\r\n        <div className=\"row \">\r\n          \r\n          {\r\n            arr.map((value,i)=>{\r\n              return(\r\n                <Cards im={value.im} ti={value.ti}> </Cards> \r\n              )\r\n            })\r\n          }\r\n          \r\n          \r\n\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n//making nav\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <>\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <NavLink className=\"navbar-brand\" to=\"/\">Nitan</NavLink>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n           <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 justify-content-end\">\r\n               <li className=\"nav-item\">\r\n                <NavLink\r\n                    activeClassName=\"activepart\"\r\n                    className=\"nav-link \"\r\n                    aria-current=\"page\"\r\n                    to=\"/\"\r\n                  >\r\n                    home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    activeClassName=\"activepart\"\r\n                    className=\"nav-link \"\r\n                    aria-current=\"page\"\r\n                    to=\"/service\"\r\n                  >\r\n                    Service\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    activeClassName=\"activepart\"\r\n                    className=\"nav-link \"\r\n                    aria-current=\"page\"\r\n                    to=\"/about\"\r\n                  >\r\n                    Search\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    activeClassName=\"activepart\"\r\n                    className=\"nav-link \"\r\n                    aria-current=\"page\"\r\n                    to=\"/contact\"\r\n                  >\r\n                    Contact\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n     \r\n    </div>\r\n  </div>\r\n</nav>\r\n    </>\r\n \r\n );\r\n};\r\n\r\nexport { Home, Contact, About, Service, Nav };\r\n\r\n","C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\Home.js",["45"],"C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\Contact.js",["46"],"C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\Service.js",[],"C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\Cards.js",[],"C:\\Users\\Nitan thapa\\Desktop\\doit\\my-app\\src\\Search.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":122,"column":13,"nodeType":"57","endLine":127,"endColumn":15},{"ruleId":"58","severity":1,"message":"59","line":290,"column":24,"nodeType":"60","messageId":"61","endLine":290,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":21,"column":15,"nodeType":"57","endLine":26,"endColumn":17},{"ruleId":"58","severity":1,"message":"59","line":173,"column":26,"nodeType":"60","messageId":"61","endLine":173,"endColumn":28},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]